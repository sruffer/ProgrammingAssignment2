getwd()
cd
cd ..
cd()
..
setwd(~)
search()
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(5)
square(5)
n
x
pow(2)
make.power(2)
x
n
ls(environment(cube))
get("n", environment(square))
?ls
ls()
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
y
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
y
clear(y)
ls()
remove(y)
y
f(3)
remove()
remove(all)
all <- ls()
remove(all)
remove(cube)
remove(f)
remove(g)
remove(make.power)
remove(square)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
val1 <- cachemean(1, 2, 3)
val1 <- makeVector(1, 2, 3)
val1 <- makeVector(5)
val1
val1(4)
val2 <- cachemean(5)
val2 <- cachemean(val1)
val2
source(cachematrix.R)
getwd()
setwd(~)
?setwd
setwd("~")
getwd()
setwd("C:/Users/sruffer/ProgrammingAssignment2")
source(cachematrix.R)
source("cachematrix.R")
v1 <- makeCacheMatrix(1,2,3,4)
v1 <- makeCacheMatrix(1)
source('~/Coursera/Code and Data/ProgrammingAssignment2Sample.R')
source('C:/Users/sruffer/ProgrammingAssignment2/cachematrix.R')
